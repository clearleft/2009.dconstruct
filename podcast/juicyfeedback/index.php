<?php
	$title = "Podcast: Loving Your Player With Juicy Feedback";
	$section = "podcast";
?>

<?php $dr = str_replace($_SERVER['SCRIPT_NAME'], '/includes/', $_SERVER['SCRIPT_FILENAME']); ?>

<?php include($dr . "head.inc.php"); ?><!-- HEADER -->

<!-- SECTION PODCAST -->
<div class="section">

<h1>Loving Your Player With Juicy Feedback</h1>
<h2 class="vcard"><a href="/schedule/robinhunicke" class="fn url">Robin Hunicke</a></h2>

<p><a rel="enclosure" type="audio/mpeg" href="http://dconstruct.s3.amazonaws.com/2009/podcast/dConstruct2009-Hunicke.mp3">Download the audio</a></p>
<object type="application/x-shockwave-flash" data="http://huffduffer.com/flash/player.swf?soundFile=http://dconstruct.s3.amazonaws.com/2009/podcast/dConstruct2009-Hunicke.mp3" width="290" height="24"><param name="movie" value="http://huffduffer.com/flash/player.swf?soundFile=http://dconstruct.s3.amazonaws.com/2009/podcast/dConstruct2009-Hunicke.mp3"><param name="wmode" value="transparent"><a href="http://huffduffer.com/dConstruct/8340">Loving Your Player With Juicy Feedback on Huffduffer</a></object>
<p><a href="http://huffduffer.com/add/8340">Huffduff it</a></p>

<p>Podcast transcripts brought to you by the <a href="http://www.opera.com/developer">Opera Developer Network</a></p>

<cite>Robin</cite>:

<blockquote>
<p>Ok, so I first fell in love with games when I was very young. I didn&#8217;t have game consoles myself but a friend did&mdash;spent a lot of time playing Yule in her brother&#8217;s bedroom. He was also pretty cute so that was good. And I went off and studied photography and film, and thought I was going to be a poet and other kinds of crap. And then I became a computer scientist and I was still playing video games, and now I had a computer to play them on. This was one of the first games I really lost a lot of time in when I was in graduate school, early graduate school&mdash;it&#8217;s called Missed, I don&#8217;t know if you remember it but it was beautiful, very lush, but then there was a little tiny Quicktime movie in the middle which was then a hyper card stack which you could press and make things happen, and I really thought &#8216;Wow, these things are the cat&#8217;s miaow and I eventually ended up studying video games for real in my PhD work, and my thesis was on a Dynamic Difficulty Adjustment System for Half Life and what that means is that it tried to make the game easier or harder, depending on how good you were at playing it, in the hopes of making it more enjoyable for Newbs. And right as I was finishing it I got recruited to go to Electronic Arts where I worked on the Maslow Hauraki game known as The Sims, or Sims 2 in this case for the PC. It&#8217;s a systems-based game, very&hellip; a lot of AI in it, and players poke and prod the system, and it responds and the characters do things, and it&#8217;s a really fun, sort of, interactive game/toy. After which I became the lead designer of a game called My Sins, which is a children&#8217;s application, it&#8217;s kind of like a storybook. It has a very complex but yet simple editor that you can use to build things, and by building things and giving them away, you earn the respect and love of your neighbours and open up more contents, or sort of a little Zen thing for you&mdash;give away, don&#8217;t keep, unlike The Sims.</p>

<p>And I also ended up working with Steven Spielberg on the BAFTA award winning &#8216;Boom Blox&#8217; for the Wii which&hellip;. both of these games had this editor component where you could compose things, but in this case, you would compose them, then blow them up and it&#8217;s really fun. It&#8217;s a super, super juicy game on the Wii so I suggest you check it out, not just because I worked on it. And now I&#8217;m at That Game Company in sunny Santa Monica, and we make games that are trying to have an emotional impact on the world, give people a feeling of love or spirituality or oneness with Nature&mdash;those are things that people have said about our most recent title, Flower.</p>

<p>So&mdash;I am not a gamist, I do not believe there is any one thing that makes a game a game, but I have met people who feel that way&mdash;in the past people have told me games are not games if they don&#8217;t have explicit and progress-locking goals. Games are not games if they don&#8217;t require the learning of a complex or a difficult skill. Games are not games if they don&#8217;t have a story tying all the action together, and they&#8217;re not games if they don&#8217;t have challenge. I don&#8217;t believe in game-ism, and as a way of sort of dealing with all this critique of different games I&#8217;ve worked on, different games my friends have slaved over&mdash;because making games is hard&mdash;I have been working for about ten/twelve years now on a theory of game design and sort of construction called MDA. And in order to be able to talk to you about juiciness we&#8217;re going to have to establish that vocabulary together, so that&#8217;s what we&#8217;re going to do.</p>

<p>Here&#8217;s a designer in a fire; the designer creates the game, the fire consumes it, that&#8217;s the most easy way&mdash;it&#8217;s a little reductionist to say how games are made and enjoyed by people. And you could say the same thing about a book or a movie or a painting or a website. The thing that makes these things interesting, as we&#8217;ve heard today, is that they&#8217;re unpredictable in their use. The context of their use is unpredictable and it&#8217;s hard to know what the user or the player&#8217;s going to do while they&#8217;re being consumed, and this is the problem for a designer, if you can formalise it, by thinking about it. In the terms of engineering, if you have rules which create a system that generate fun, that&#8217;s still pretty squishy, so let&#8217;s say it&#8217;s code which generates behaviour which, hopefully, satisfies your requirements. Or you have mechanics, dynamics and aesthetics. And these are squishy terms, but they help us get away from words like &#8216;fun&#8217; and towards things that are more concrete. Mechanics are game components like algorithms, data representation that define how the game works. Dynamics is the run time behaviour of the system and the resulting output over time, as your user pokes it. And aesthetics are the player&#8217;s emotional response to the experience she has when she interacts with your game and/or construct, and hopefully this is a desirable emotional response, not one of the ones that we saw in the presentation prior!</p>

<p>So why not fun? All of these things are fun and that&#8217;s why. You can say a lot of things about what&#8217;s fun&mdash;fellowship, expression, challenge, fantasy, narrative, submission&mdash;there are lots of words that describe the kinds of fun you can have with a game, and this framework that we&#8217;ve been working on is a collective of designers who&#8217;ve worked all over the industry. We teach a workshop every year at TGC, the Games Design Workshop, to two hundred to two hundred and fifty people. The reason we work on these words is because they help us get to the problems we&#8217;re trying to solve. If we have an aesthetic goal, we can work backwards through the system to mechanics that make it happen. But they&#8217;re still pretty hard to talk about, and when I first started working at TGC I thought that the aesthetics that I was trying to get to was sensation, but it&#8217;s not quite right.</p>

<p>So let&#8217;s think a little bit more about aesthetics and what they do. Well they tell us how a system&#8217;s behaving, what it&#8217;s doing well or poorly. So both Charades and Monopoly have this concept of competition which requires a perceivable winning condition, or an achievable winning condition. You don&#8217;t want to run a race if your legs are tied together. You may run it with your legs tied to someone else&#8217;s, but certainly not tied together by yourself. And to get to those sorts of things, you need to go one level down to their dynamics. So, for example, the things that create challenge on an aesthetic level dynamically are time pressure and opponent play&mdash;you have to get it done and you have to get it done against someone else. Now all of a sudden it&#8217;s a challenge. If you have some fellowship in this space, for example, some shared information or group sized goals, then you have something a lot more like Charades&mdash;there&#8217;s some shared information, there&#8217;s some hidden information but there&#8217;s teams to play against each other and that&#8217;s fun in and of itself. One could say that Counterstrike is Quake plus fellowship.</p>

<p>There are other ways to sort of think about these models. 2D6 have a particular probabilistic curve, right? And you know that someone will go around the board at a certain rate in general, if they are rolling 2D6. Another that we often see in games is the lovely feedback system. As the environment changes, the controllers change the environment and you get something like a little tiny set of animated characters that change as you feed them and have them sleep. Now what&#8217;s interesting is that Monopoly has both of these things and they have a certain effect, don&#8217;t they? How many of you have played a game of Monopoly? How many of you have won a game of Monopoly? How many of you have finished many games of Monopoly? (laughter) Why is that? The thing is is that the dynamics are supported by specific mechanics in the game, right, so trick-taking, betting that leads to bluffing, shooting the moon when you&#8217;re playing cards, weapons, ammo, spawn points that leads to camping or sniping in the context of a first person shooter or a team shooter. When you&#8217;re playing with a dice in Monopoly, you have this constant moving across the board to an unpredictable location which creates a sort of drive-by strategy, like &#8216;Oh crap, it&#8217;s a railroad, I really wanted to be two spots over, I guess I&#8217;ll deal with this now.&#8217; So there&#8217;s a constant unsettling of any real planning, and the cards that you get, for example, do the same thing&mdash;draw some money, go to jail, zoom halfway across the board. Everything in Monopoly, on the level of mechanics, is upsetting your ability to have some control, and strangely it&#8217;s like people don&#8217;t enjoy that.</p>

<p>So what happens when you play Monopoly? You win for a while, and then maybe you&#8217;re losing, and then you&#8217;re winning but then, over time, as more people get lucky enough to be winning or, say, one person gets lucky enough to have a couple of winning moves, suddenly the gap between the winners and the losers is wider and wider, like in Monopoly, and it becomes very difficult to be invested in playing because you can see that you will never win. Or at least you can perceive that the chances of your plan to win succeeding are being totally thwarted by all of the mechanics in the game. So a lot of Monopoly games end with &#8216;Great, you win, let&#8217;s go ride bikes&#8217;. You can fix Monopoly and people do, right? You can play on a smaller board, you can hack the board, you could have D20s, you could move really fast, you could have a concert rate tax that sort of increases payouts for the poor to shorten the gaps, you can randomly distribute the properties and then maybe encourage trading or other ways of paying for things&mdash;strip Monopoly is a possibility, might be a little slow, depends on those dice. A good reason to invest in some D & D die.</p>

<p>The thing you&#8217;re doing when you take mechanics down to this level and think about something as simple as Monopoly is you give yourself the opportunity to provide missing dynamics or to fix broken dynamics, and we all know that lots of software and lots of games, lots of everything has broken dynamics. What these specific changes do is they provide achievable winning conditions, or at least the perception that the win is achievable by shrinking the gap, and societally these are things that we do with real money and real people to keep them feeling invested in performing in society.</p>

<p>So MDA is a tool that anyone can use. A typical designer perspective we all know, I mean even just in the prior talk we sort of saw it, is to stay down there on the level of mechanics. It has a swanky thing, it does this stuff and yet it&#8217;s important to recognise that those things, while creating the aesthetics, are very separate from it. And typically players like to evaluate the aesthetics&mdash;I go to the restaurant, I sit down, I order the meal, I eat it, I complain that the soup was cold, blah blah blah blah blah. It&#8217;s common for your user to not really understand what you were trying to get at&mdash;if the soup is over-salted, the soup is over-salted. Period. So it&#8217;s good to encourage them to come on down, visit the kitchen, check out your process, advertise your process, let people know&mdash;as we have been doing in games for a while now&mdash;how hard it is to achieve the things you&#8217;re trying to achieve, and educate them a little bit, but also as a person yourself, be curious about these sorts of things, right? I love food and I love games and I love a lot of things and I try to figure out the mechanics on those things.</p>

<p>As a designer it&#8217;s really important to get out more and use more, do more that&#8217;s not doing. Because if you exist in a world that&#8217;s filled with mechanics, you see mechanics everywhere and never the bigger picture. I think one of the most common critiques of AI and of systems with a future in science fiction is they&#8217;re designed by people who only think about those things. So they have a lack of something&mdash;quan, as one might say. The quality without a name is not present in certain artifacts.</p>

<p>So normally when I talk about MDA I&#8217;m communicating with an audience filled with game designers and I&#8217;m saying &#8216;Please, for the love of God, take these tools and put your player on stage, make the player&#8217;s choices be meaningful to the activity they&#8217;re engaged in, don&#8217;t just tell them&mdash;then you&#8217;ll go here and you&#8217;ll jump on the red square, then you&#8217;ll go here and you&#8217;ll put the thing in the slot, then you&#8217;ll get the key,&#8217; and so forth. Avoid feature-driven design, avoid clutter, you know, don&#8217;t give yourself this excuse for just wanting more spices until it&#8217;s just like, what is this thing? It tastes like your spice cabinet. And in the process of thinking about the mechanics, the dynamics, the aesthetics, learn to dialogue with your team, with your publisher, with your audience, about the editor of process that is necessary for taking a mechanic, putting it in, trying it out and if necessary, eliminating it because that streamlines your development process and helps you avoid fixing what isn&#8217;t broken, and those are real problems in games. We have huge development cycles, in some cases five to seven years, to make a rather large game, say, World of Warcraft or&mdash;those are people&#8217;s lives, you know, that&#8217;s aeons of designer time. So many man hours. And if you can streamline&mdash;I say to the game designers and game developers, &#8216;Let&#8217;s, you know, we&#8217;ll make more and we&#8217;ll make better mistakes at least.&#8217; But you guys aren&#8217;t those people, at least not all of you&hellip; three designers? So what about juiciness, right?</p>

<p>There is something more out there than mechanics, dynamics and aesthetics&mdash;I said it. I mean, that&#8217;s hard for me to say because I&#8217;ve been working on that model for a long time, longer than it took me to develop four whole games and start&mdash;and mostly finish&mdash;my thesis. And when I went to TGC we would be having these design meetings talking about it, and they&#8217;d go, &#8216;Yeah, yeah, Robin, we know&#8217; but no, seriously, there&#8217;s something like that is important with the controls and like, we would dialogue about it and I realised that it was this quality they call juiciness&mdash;juicy feedback. (unintelligible 15.21) always says, &#8216;Oh, this is juicy&#8217; and when he says that, you know it&#8217;s like a good thing, we&#8217;re getting somewhere. But rather than try to describe that, I thought I would just show you what Flower looks like. How many of you have already seen it? Oh, all right. So the thing to understand about this is that it&#8217;s a downloadable game for the PS3. You have a PS3 controller, you can press one button and turn it to make the flower petal-storm move.</p>

<p>So, Flower is really juicy and it responds to you constantly and you don&#8217;t have to hardly do anything. There&#8217;s no time pressure, there&#8217;s no explicit goal, you just kind of fly around unlocking stuff, really, by picking up small glowy flower petals, and the sound is reactive and responsive, it has an interactive system for sort of figuring out where you are in the space and playing the sound, the wind and the music. And it simulates thousands and thousands and thousands of blades of grass in real time. And the reason that Flower is this juicy is because it is only built to make you feel free. We don&#8217;t do what other games do, we don&#8217;t do character, we don&#8217;t do twitch ammunition, we don&#8217;t do explosions, there&#8217;s none of that. We focus completely and totally on the juiciness required to create a feeling within our player and for this development cycle which, sadly, I was not a part of, the struggle which Sony was so great in supporting us through, was finding just the right balance of almost nothing to create that feeling of Zen, which is one of the most common words used to describe the experience. Very popular, our last game before this, Flow, is top-downloadable on PSN and this is quickly climbing the charts and has surpassed our sales for the last game in the timeframe that we were in. Why? I mean it&#8217;s not challenging, it&#8217;s not a game, if you&#8217;re a gamist.</p>

<p>I would argue that the dialogue we&#8217;re having here today about handles and affordances, and the things that you put in front of your user is all about getting juicy. Juicy is bubble wrap. It&#8217;s this tactile, instant feeling that you get from interacting with something. And I would argue that it&#8217;s the smallness&mdash;like we heard this morning about the surface between two different things&mdash;that surface is delicate and very important in an interactive context. It&#8217;s the thing your user spends the most time with. And it has to be fresh or you can make something like that, and it&#8217;ll just go away because it&#8217;s old hat. Think about this phrase&mdash;&#8216;Juicy headshot&#8217;. Right. That was really sexy and important for a while, it&#8217;s not really any more, and there are some other reasons we&#8217;ll go into later for why but juiciness has to be appealing to your audience, it has to fulfill your aesthetic. So an aesthetic goal like sensation doesn&#8217;t really work for juicy, and that&#8217;s a problem for me because I&#8217;m an academic at heart and I want my system to be inclusive and whole, like Heidegger did or something. And it&#8217;s not. And while it&#8217;s disturbing, it&#8217;s also really exciting because what it means is that there&#8217;s a community of game developers and interaction designers who can study this thread of feel, and so this is our friend Steve Swinks&#8217; book, &#8216;Game Feel&mdash;A Game Designer&#8217;s Guide To Virtual Sensation&#8217;. Sounds kind of sexy! What is game feel? Well, he says &#8216;If your player is going to spend most of her time experiencing a sense of physicality in control, shouldn&#8217;t the amount of time you spend on that feeling be commensurate? From the beginning of pre-production until the final game ships, design should include juicy feedback.&#8217; That&#8217;s a little bit mean of me to stick that in instead of &#8216;game field&#8217;, but I like juicy feedback better because juicy feedback sounds juicy!</p>

</blockquote>

<cite>Robin</cite>:

<blockquote>
<p>And juicier than ever before is where we are now, everyone has been saying this, now is the time, you know, you guys are the future. We have so much capability to do all this great stuff. Visualisation, sound, articulation, you know, piezoelectric sensors, motors, actuators, prototype technologies, long distance communication&mdash;oh my God, it&#8217;s like we&#8217;re in science fiction! So what are some examples? That was really where this started to go for me. I can&#8217;t just talk about one game being juicy and make an impact, right? Here&#8217;s one, The Prius, I believe you call it? We call it The Pree-us. Has a super juicy motor, sort of, gas mileage consumption model that it puts out in the screen in front of you when you drive it, such that people really try to change the way they drive so as to have better mileage, and they kind of get into these little games with themselves about how they can get up the hill and then down with using less gas, right? So juicy and so great for the environment.</p>

<p>This is a BETA site for a Hollywood Hill philanthropy project, I&#8217;m on the Board of Hollywood Hill. It&#8217;s called &#8216;Armchair Revolutionary&#8217;, it&#8217;s a micro-investment time and money platform for philanthropy. If you&#8217;re going to be giving people lots of your time and consideration to try and make the world a better place, shouldn&#8217;t you get real time feedback about how the projects are doing and how much you&#8217;ve contributed to the community? Wouldn&#8217;t that be great if you could level up as a philanthropist? It could happen. We heard today about juicy cities, props to all the people that are working so hard to make data more visible, to create better filters, give better handles, give you more response. Those things are super important because that&#8217;s where we live every day. We all know about the success of the juicy input device, even when, if you look here, the literal activity of the response mechanism is&hellip; people feel like doing this is super juicy, and you don&#8217;t have to do very much more. And there are a lot of game developers who rail against this&mdash;damn them, those juicy liking users. There&#8217;s hardly any pollies in that guys, invisible head. You just don&#8217;t get their money, then, I guess, is the lesson for those gamists.</p>

<p>This is from a review of the Samsung Insight phone versus the iPhone. I just found it when I was doing a Google image search. Guess which one&#8217;s juicier? Apparently the 3D sound, the sensor feedback inside the Insight is really great. I have not used it. I don&#8217;t own an iPhone either, but there sure are a lot of them out there. And they&#8217;re a little juicier than my real phone. I almost feel like the iPhone isn&#8217;t a real phone, it&#8217;s something else, it&#8217;s this computer of the future that we heard about, it&#8217;s this really juicy thing. And I guess that&#8217;s a lesson for the people that did the Insight who were apparently very brilliant. Juiciness for its own sake is not enough, you have to really be filling a niche and once that niche is filled, it&#8217;s not fresh.</p>

<p>Here&#8217;s a juicy robot. I used to work on robots, they&#8217;re really frustrating, they break all the time. But now they can actually be mass produced pretty cheaply and you can get a little dinosaur that walks around and coos, much like a baby or R2D2. And will cuddle with you and respond to your sensing, and touching and speaking in a way that&#8217;s actually almost kind of creepy. Again, I don&#8217;t own one but friends say that they bought one for their child when they moved here because they couldn&#8217;t bring their dog over because of all these horrible laws about dogs here, and so they bought it one of these and people would come over and say, &#8216;Oh my God, what is that thing? It&#8217;s really scary.&#8217; And they go, &#8216;It&#8217;s a toy.&#8217; &#8216;Turn it off, it&#8217;s making some weird noise.&#8217; And you know, that&#8217;s what got me thinking about Moon, so this is the point where you do this, if you&#8217;re going to see the movie. This is the juicy feedback of the robot in Moon. Moon is about Sam Rockwell&#8217;s character who is a clone. He gets sick and wakes up, and then goes outside and finds himself. And he comes back to the station very upset, and up until the time that this happens, you see him interacting with this robot who cuts his hair, talks to him&mdash;it&#8217;s Kevin Spacey voices the robot&mdash;&#8216;Hello Sam, would you like me to cut your hair today, Sam?&#8217; Very much like the Star Trek robot voice. But it has this really funny emoticon face, that&#8217;s it. It has the human, abstract voice and the emoticon face.</p>

<p>So Sam comes back to the moon pad and he says, &#8216;I found it outside, what is it? What is it? Who is this?&#8217; And the robot starts to swing into place with this face like&hellip; &#8216;You tell me what this is. You fucking tell me.&#8217; And he says, &#8216;Perhaps you&#8217;re imagining things.&#8217; With that face. And it&#8217;s like, super ominous, and you&#8217;re like, &#8216;Oh my God, it&#8217;s Hal, it&#8217;s going to kill him. It&#8217;s going to kill all the clones.&#8217; But what&#8217;s awesome about this movie and why you should go see it again if you&#8217;ve seen it, is that the relationship that develops between the robot in this film and the clones it has been taking care of is a love relationship. At the end of the film, when Sam Rockwell is desperately trying to figure out how to escape before the guys who are going to fix the situation appear and they look like terrible mobster Mafia guys, the robot says, &#8216;Well, if you reboot me, I won&#8217;t remember you and then you can live.&#8217; It&#8217;s not clear but the robot has been living on the space station with Sam for years, or copies of him, and over the course of seeing him get woken up, live, have this fantasy of a relationship on the planet Earth with his wife and child, and then die, the robot has learned that it is the moral obligation of the robot to save his life. And it kills itself to save him. And it has a brilliant emoticon for a face. Which is brilliant because when it&#8217;s talking, you imagine just like when you&#8217;re typing with your lover back in California who you haven&#8217;t see for almost a week, the little face of that person smiling when you make a funny joke about saying, I don&#8217;t know, &#8216;boot&#8217;&mdash;you imagine a humanity on the other side of that emoticon and the voice is almost ancillary to the communication. It&#8217;s about knowing there&#8217;s more going on behind the face than is, and then interpreting that, and that is the genius of this movie. It is not about the clones, it is about the robot. Done.</p>

<p>So when I was talking to Ben Cerveny earlier about this, we decided that this context, this notion of juiciness is really part of embodiment feel often associated with an avatar like, you know, &#8216;Mario has great feel&#8217;, is actually a little bit too broad. Juiciness can be applied to abstract forms and elements and it is a way of embodying arbitrarily defined objects and giving them some aliveness, some quan, some thing, some tenderness. And it hears that intelligence but it&#8217;s not intelligence because this thing, your petal swarm as you move through the grass and it lights up, there&#8217;s a part where it glows at night and things&mdash;it&#8217;s autonomously responding to my input but it&#8217;s not needy. It doesn&#8217;t have emotional needs like the Pleo might, it&#8217;s not a baby like R2D2. I don&#8217;t have to feel guilty. I can just enjoy its being-ness and my being-ness as they interact. We can be tender to each other.</p>

<p>So there is one thing about juiciness that&#8217;s problematising, and that&#8217;s that the player must be in a receptive state of mind to be feeling juicy&mdash;I&#8217;m sure you&#8217;ve all had this experience when you&#8217;re out. You want to feel juicy, you go out, you have a few drinks, it&#8217;s hard to find someone else who&#8217;s in the same state of mind. And to get your user in that state of mind, you have to do a lot of marketing, and you got to go out there and say, &#8216;Flowers can be a game where you have feelings and Zen.&#8217; But eventually you get some people who show up who want to be there, and then all you have to do is remove arbitrary constraints so they can stay in flow. It&#8217;s very similar to the concepts that you hear about in yoga or meditation, the ultimate act is to rise above notions of control and intent and just be, to be tender, to be with each other. You hear the same thing in martial arts, I took a bunch of Kung Fu when I was young and fit. It&#8217;s not about winning, it&#8217;s about being. If you imagine yourself being protected from this person that&#8217;s trying to strike you, you will move so that they cannot. Don&#8217;t try, just do it. And this is the language that people use to describe in D code the feelings they have when they play Flower. Partially because of the marketing, I&#8217;m sure, but partially because it&#8217;s true, that you really don&#8217;t have to do anything with it so you can just be.</p>

<p>Juicy experiences let you love your player because they create this relationship we&#8217;ve been talking about today. They let you love them for what they&#8217;re doing by paying attention, responding appropriately, they turn on your ears, juicy games, juicy applications are listening. And, as Ben was saying, the point about people having this literacy about autonomists or living objects is that you can guide them to the fun parts, the juicy parts, the challenging parts, the sensuous parts, the fantasy parts, the ones that are going to be emotionally rewarding and engaging. That&#8217;s your job, remove the constraints and then be a good guide but don&#8217;t impose rules or arbitrary constraints.</p>

<p>This is as far as I&#8217;ve gotten with it. &#8216;Juicy feedback gives your users moment to moment joyful feelings when they engage with your design.&#8217; And, like, everything could be juicier. Tractors could probably be juicier. Someone came up to me after a lift a few years ago when I was using the word &#8216;hugs&#8217; to describe this, which is much less good, and said &#8216;We should give more hugs with those Volvo tractors I&#8217;m working on.&#8217;</p>

<p>I&#8217;ve been reading this book by Bruno Minori that David Sermon gave me when I was in London, and I was struck by the opening section of it, which is about his experiments with useless machines. How many of you are familiar with his work, Bruno Minori? He&#8217;s like the conceptual Italian designer who was in the scene in the early twentieth century and he describes what led to these useless machines, some sort of call them mobiles but he really doesn&#8217;t like that term, which was that abstract painters in Italy were just filling in shape. They were getting rid of the construct of painterly skill and just observing flat shape as a way of thinking about the paint that you put in a shape being the most important thing, and everything else kind of falling away. And he thought, well why not just take the shapes off the page? Why not just hang them in the air with little pieces of string so they can respond to the air currents? These are some pretty constrained ones, he did some really beautiful ones, I just couldn&#8217;t find pictures. And what he says when talking about them is &#8216;Artists are destroying the myth of the talented, capable, rich creator that creates for the rich. The notion of skill is going away. Design is being created in the space of art because it&#8217;s democratising the act of creating, and useless machines were my way of putting something in the world that was completely free of constraints and yet inviting, and beautiful has been used to describe them. They are what they are because I refuse to be a person who makes fine things for fine people. I am a designer, not an artist, I am a changer, I am a revolutionary.&#8217; Right? And he points out that in fact this is the mode of art, right, that&#8217;s to destroy all things and go off in our little spikes and find one tangent and explore it. And I think juiciness is one of them.</p>

<p>I have no idea where this talk is going, and the reason I&#8217;m here today, giving it, is that I want you guys to tell me more about the space because you&#8217;re not game designers, and so I encourage you to approach me after the talk and give me feedback, juicier the better! Even if it&#8217;s bad. Don&#8217;t be a gameophile or a gameist, be a juice-ophile and write me and tell me what you think. That&#8217;s it.</p>

<p>I guess we have time for questions&mdash;they don&#8217;t seem to be very popular, though. Yes&hellip;</p>
</blockquote>

<cite>Audience member</cite>:

<blockquote>
<p>Hi, I&#8217;m Adam Craven from Cadpress. I&#8217;m just wondering how you see this kind of relating to designs on the web and perhaps, like, applications on the web you know &hellip; or Internet-rich applications and how would you make them more juicy?</p>
</blockquote>

<cite>Robin</cite>:

<blockquote>
<p>That&#8217;s a really good question. Do you guys know mint dot com? Here? So that&#8217;s a really juicy one, I use it because I&#8217;m terrible with finances, but it just has lots of things that make you feel like you&#8217;re aware of what&#8217;s going on with your money and when you do stuff, it writes back and it&#8217;s like, &#8216;Oh dude, you just got a fee, we don&#8217;t like those. You should really pay your credit card on time.&#8217; Not like I&#8217;ve ever gotten that one, but all the stuff that Seimen is doing could be applied to websites, in fact has. The juiciness comes from the real time quality, the tactile nature of those handles, sliding along that bar, watching things change. The easiest way to add juiciness is to ask yourself, what is the experience your user is trying to have? If they&#8217;re trying to have, in the case of the weather application, an experience of knowledge that makes them feel better about something really scary, then the most important thing is to give them access to as much information in as many ways as possible without cluttering the actual result of that search, and I think that&#8217;s one of the amazing things about that interface is there&#8217;s just so much you can do with it. But only if you look. If you get the data you need right away then you just feel better and you leave. And the other thing to do is to do stuff, and then show it to people. Really, really, really just iterate&mdash;the Hollywood Hill example, Armchair, we got it mostly running and then, you know, it was just like it&#8217;s not telling me what I&#8217;m doing. It had buttons and stuff, but&hellip; and I was like, well, maybe it&#8217;ll have lots of flash and sound, and then Abe, the UI designer that&#8217;s working on it, was like &#8216;What about blocks, we&#8217;ll just kind of drop them in and then as you succeed&hellip;&#8217; and then once you get that metaphor, suddenly it&#8217;s like, &#8216;Oh yeah, we&#8217;re tearing down the bricks, we&#8217;re like putting the new blocks in place, like, as a community of philanthropers, you know, we can do all this great stuff. We can build, we can tear down and we can rebuild.&#8217; And that&#8217;s super-juicy and it just came from that dialogue about what was the number one thing I wanted to get out of that site, which was I wanted to feel like I was making a difference. So start with the A, the feeling, and work backwards.</p>
</blockquote>

<cite>Audience member</cite>:

<blockquote>
<p>I was just wondering if you can do this with line of business applications? Because when someone&#8217;s forced to use it&hellip; but you talked about juiciness being a sort of continuing thing, and so I can appreciate the initial &#8216;Ok, here&#8217;s this application you&#8217;ve GOT to use, and we can make it look cool and we can make it easy to use but long term, it&#8217;s going to be every day, you just see this thing over and over again. How do you continually make that juicy? What about experience juicy?</p>
</blockquote>

<cite>Robin</cite>:

<blockquote>
<p>Well that&#8217;s a good question because we have the perception that you have to use it means it can&#8217;t be fun. And that&#8217;s crap, right? And then the other thing is that if you use it every day, it&#8217;s not going to feel fresh. So a simple way would be to have a skinnable interface that you could scan dynamically, like maybe Google does with holidays. Everyone uses Google all the time and every once in a while, you&#8217;re like &#8216;Yay, it&#8217;s Ceroc&#8217;s birthday&#8217;, or some random thing, right? Giraffes&mdash;who knew? It&#8217;s really brilliant, and it&#8217;s so easy, you just kind of feel like&hellip; why didn&#8217;t I think of that? The other thing you can do&mdash;and this is something that Van and I talked about a lot at one point before I left the EA magnet and he went off to Europe, which was to build things that have real time components that are aware and alive all the time on your desktop. So maybe you have this application and it appears inside of a frame, and that frame is relaying information to you&mdash;the same, an example of &#8216;Oh, Saddam Hussein brings fears&#8217;, right? You can put that kind of stuff in a work application, people will still work. In fact, they&#8217;ll enjoy themselves for a bit and then they&#8217;ll do a little work, and then they&#8217;ll enjoy themselves for a bit, and they&#8217;ll be happier when they leave. The perception that one must always be working when interfacing with applications that are for efficiency is what, I think, drives that discussion. So think about it like it was a game. If&hellip; I use Excel all the time, if when I actually completed a formula and then dragged it down a column that went &#8216;da-da-da-ding&#8217;&hellip; that&#8217;d be cool. What would be REALLY cool is if I could do it and then change the sound myself. And then everywhere in my office, people would be going crazy because my spreadsheet would sound like Hidamari (unintelligible 38.30) music. But yeah, I mean I think it&#8217;s about getting outside of this concept of, in the same way with embodiment, get away from notions of efficiency, embodiment, having to be about human intelligence and work, and move towards things that exist in Nature that are responsive and nice. One of my favourite things to use, actually, on the web and it&#8217;s super-juicy in a certain way, is the visual Thesaurus. A lot of times when you&#8217;re doing game design, you need to think about a system or something, and you just get stuck and so you go, &#8216;All right, I&#8217;ll just go into the Thesaurus and start typing crap in&#8217;, and it goes &#8216;bloop bloop bloop bloop bloop bloop&#8217; and then you&#8217;re like, &#8216;Oh, I like that word&#8217;&mdash;bloop bloop bloop, blooping is really cool! Right now it is anyway, it&#8217;s probably going to be not cool soon, but it&#8217;s really cool now. So find the blooping, I guess. I know that sounds really crazy, &#8216;What was that word, Matt?&#8217; Trying to think of what it was. Rubakake, was it? Rubakiko? A word that sounds like what it means, blobby and spiky. Anyway, so that&#8217;s it, I think, unless there&#8217;s another question?</p>

<p>Ok, well before I go, there&#8217;s one thing I&#8217;d like to do, which is encourage you all to be much more playful and silly than you have been. Go back to work and suggest something totally crazy and juicy on the project that you&#8217;re working on, because the worst thing that can happen is that they&#8217;ll say no.</p>
</blockquote>


</div>

<!-- FOOTER -->
<?php include($dr . "footer.inc.php"); ?>